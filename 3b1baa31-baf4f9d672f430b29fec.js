/*! For license information please see 3b1baa31-baf4f9d672f430b29fec.js.LICENSE.txt */
"use strict";(self.webpackChunkgatsby_port_site=self.webpackChunkgatsby_port_site||[]).push([[259],{5588:function(t,e,n){function a(){return a=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},a.apply(this,arguments)}var r;n.d(e,{AO:function(){return h},B6:function(){return m},Gh:function(){return b},HS:function(){return S},Oi:function(){return l},Rr:function(){return p},pb:function(){return g},rc:function(){return r},tH:function(){return E},yD:function(){return v},zR:function(){return o}}),function(t){t.Pop="POP",t.Push="PUSH",t.Replace="REPLACE"}(r||(r={}));const i="popstate";function o(t){return void 0===t&&(t={}),f((function(t,e){let{pathname:n,search:a,hash:r}=t.location;return u("",{pathname:n,search:a,hash:r},e.state&&e.state.usr||null,e.state&&e.state.key||"default")}),(function(t,e){return"string"==typeof e?e:h(e)}),null,t)}function l(t,e){if(!1===t||null==t)throw new Error(e)}function s(t,e){if(!t){"undefined"!=typeof console&&console.warn(e);try{throw new Error(e)}catch(n){}}}function c(t,e){return{usr:t.state,key:t.key,idx:e}}function u(t,e,n,r){return void 0===n&&(n=null),a({pathname:"string"==typeof t?t:t.pathname,search:"",hash:""},"string"==typeof e?p(e):e,{state:n,key:e&&e.key||r||Math.random().toString(36).substr(2,8)})}function h(t){let{pathname:e="/",search:n="",hash:a=""}=t;return n&&"?"!==n&&(e+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(e+="#"===a.charAt(0)?a:"#"+a),e}function p(t){let e={};if(t){let n=t.indexOf("#");n>=0&&(e.hash=t.substr(n),t=t.substr(0,n));let a=t.indexOf("?");a>=0&&(e.search=t.substr(a),t=t.substr(0,a)),t&&(e.pathname=t)}return e}function f(t,e,n,o){void 0===o&&(o={});let{window:s=document.defaultView,v5Compat:p=!1}=o,f=s.history,d=r.Pop,m=null,g=y();function y(){return(f.state||{idx:null}).idx}function w(){d=r.Pop;let t=y(),e=null==t?null:t-g;g=t,m&&m({action:d,location:b.location,delta:e})}function v(t){let e="null"!==s.location.origin?s.location.origin:s.location.href,n="string"==typeof t?t:h(t);return n=n.replace(/ $/,"%20"),l(e,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,e)}null==g&&(g=0,f.replaceState(a({},f.state,{idx:g}),""));let b={get action(){return d},get location(){return t(s,f)},listen(t){if(m)throw new Error("A history only accepts one active listener");return s.addEventListener(i,w),m=t,()=>{s.removeEventListener(i,w),m=null}},createHref(t){return e(s,t)},createURL:v,encodeLocation(t){let e=v(t);return{pathname:e.pathname,search:e.search,hash:e.hash}},push:function(t,e){d=r.Push;let a=u(b.location,t,e);n&&n(a,t),g=y()+1;let i=c(a,g),o=b.createHref(a);try{f.pushState(i,"",o)}catch(l){if(l instanceof DOMException&&"DataCloneError"===l.name)throw l;s.location.assign(o)}p&&m&&m({action:d,location:b.location,delta:1})},replace:function(t,e){d=r.Replace;let a=u(b.location,t,e);n&&n(a,t),g=y();let i=c(a,g),o=b.createHref(a);f.replaceState(i,"",o),p&&m&&m({action:d,location:b.location,delta:0})},go(t){return f.go(t)}};return b}var d;!function(t){t.data="data",t.deferred="deferred",t.redirect="redirect",t.error="error"}(d||(d={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function m(t,e){"string"==typeof t&&(t={path:t,caseSensitive:!1,end:!0});let[n,a]=function(t,e,n){void 0===e&&(e=!1);void 0===n&&(n=!0);s("*"===t||!t.endsWith("*")||t.endsWith("/*"),'Route path "'+t+'" will be treated as if it were "'+t.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+t.replace(/\*$/,"/*")+'".');let a=[],r="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((t,e,n)=>(a.push({paramName:e,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));t.endsWith("*")?(a.push({paramName:"*"}),r+="*"===t||"/*"===t?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==t&&"/"!==t&&(r+="(?:(?=\\/|$))");let i=new RegExp(r,e?void 0:"i");return[i,a]}(t.path,t.caseSensitive,t.end),r=e.match(n);if(!r)return null;let i=r[0],o=i.replace(/(.)\/+$/,"$1"),l=r.slice(1);return{params:a.reduce(((t,e,n)=>{let{paramName:a,isOptional:r}=e;if("*"===a){let t=l[n]||"";o=i.slice(0,i.length-t.length).replace(/(.)\/+$/,"$1")}const s=l[n];return t[a]=r&&!s?void 0:(s||"").replace(/%2F/g,"/"),t}),{}),pathname:i,pathnameBase:o,pattern:t}}function g(t,e){if("/"===e)return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=e.endsWith("/")?e.length-1:e.length,a=t.charAt(n);return a&&"/"!==a?null:t.slice(n)||"/"}function y(t,e,n,a){return"Cannot include a '"+t+"' character in a manually specified `to."+e+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function w(t){return t.filter(((t,e)=>0===e||t.route.path&&t.route.path.length>0))}function v(t,e){let n=w(t);return e?n.map(((t,e)=>e===n.length-1?t.pathname:t.pathnameBase)):n.map((t=>t.pathnameBase))}function b(t,e,n,r){let i;void 0===r&&(r=!1),"string"==typeof t?i=p(t):(i=a({},t),l(!i.pathname||!i.pathname.includes("?"),y("?","pathname","search",i)),l(!i.pathname||!i.pathname.includes("#"),y("#","pathname","hash",i)),l(!i.search||!i.search.includes("#"),y("#","search","hash",i)));let o,s=""===t||""===i.pathname,c=s?"/":i.pathname;if(null==c)o=n;else{let t=e.length-1;if(!r&&c.startsWith("..")){let e=c.split("/");for(;".."===e[0];)e.shift(),t-=1;i.pathname=e.join("/")}o=t>=0?e[t]:"/"}let u=function(t,e){void 0===e&&(e="/");let{pathname:n,search:a="",hash:r=""}="string"==typeof t?p(t):t,i=n?n.startsWith("/")?n:function(t,e){let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach((t=>{".."===t?n.length>1&&n.pop():"."!==t&&n.push(t)})),n.length>1?n.join("/"):"/"}(n,e):e;return{pathname:i,search:$(a),hash:O(r)}}(i,o),h=c&&"/"!==c&&c.endsWith("/"),f=(s||"."===c)&&n.endsWith("/");return u.pathname.endsWith("/")||!h&&!f||(u.pathname+="/"),u}const S=t=>t.join("/").replace(/\/\/+/g,"/"),$=t=>t&&"?"!==t?t.startsWith("?")?t:"?"+t:"",O=t=>t&&"#"!==t?t.startsWith("#")?t:"#"+t:"";class E extends Error{}const W=["post","put","patch","delete"],P=(new Set(W),["get",...W]);new Set(P),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred")}}]);
//# sourceMappingURL=3b1baa31-baf4f9d672f430b29fec.js.map